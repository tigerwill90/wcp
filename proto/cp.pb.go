// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.18.1
// source: proto/cp.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Clipboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence   uint64 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	ExpireAt   string `protobuf:"bytes,2,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	Compressed bool   `protobuf:"varint,3,opt,name=compressed,proto3" json:"compressed,omitempty"`
	Encrypted  bool   `protobuf:"varint,4,opt,name=encrypted,proto3" json:"encrypted,omitempty"`
	Checksum   []byte `protobuf:"bytes,5,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Size       int64  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *Clipboard) Reset() {
	*x = Clipboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Clipboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Clipboard) ProtoMessage() {}

func (x *Clipboard) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Clipboard.ProtoReflect.Descriptor instead.
func (*Clipboard) Descriptor() ([]byte, []int) {
	return file_proto_cp_proto_rawDescGZIP(), []int{0}
}

func (x *Clipboard) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Clipboard) GetExpireAt() string {
	if x != nil {
		return x.ExpireAt
	}
	return ""
}

func (x *Clipboard) GetCompressed() bool {
	if x != nil {
		return x.Compressed
	}
	return false
}

func (x *Clipboard) GetEncrypted() bool {
	if x != nil {
		return x.Encrypted
	}
	return false
}

func (x *Clipboard) GetChecksum() []byte {
	if x != nil {
		return x.Checksum
	}
	return nil
}

func (x *Clipboard) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type PasteOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length int64 `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *PasteOption) Reset() {
	*x = PasteOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PasteOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasteOption) ProtoMessage() {}

func (x *PasteOption) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasteOption.ProtoReflect.Descriptor instead.
func (*PasteOption) Descriptor() ([]byte, []int) {
	return file_proto_cp_proto_rawDescGZIP(), []int{1}
}

func (x *PasteOption) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

type PastStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*PastStream_Info_
	//	*PastStream_Chunk
	//	*PastStream_Checksum
	Data isPastStream_Data `protobuf_oneof:"data"`
}

func (x *PastStream) Reset() {
	*x = PastStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cp_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PastStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PastStream) ProtoMessage() {}

func (x *PastStream) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cp_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PastStream.ProtoReflect.Descriptor instead.
func (*PastStream) Descriptor() ([]byte, []int) {
	return file_proto_cp_proto_rawDescGZIP(), []int{2}
}

func (m *PastStream) GetData() isPastStream_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *PastStream) GetInfo() *PastStream_Info {
	if x, ok := x.GetData().(*PastStream_Info_); ok {
		return x.Info
	}
	return nil
}

func (x *PastStream) GetChunk() []byte {
	if x, ok := x.GetData().(*PastStream_Chunk); ok {
		return x.Chunk
	}
	return nil
}

func (x *PastStream) GetChecksum() []byte {
	if x, ok := x.GetData().(*PastStream_Checksum); ok {
		return x.Checksum
	}
	return nil
}

type isPastStream_Data interface {
	isPastStream_Data()
}

type PastStream_Info_ struct {
	Info *PastStream_Info `protobuf:"bytes,1,opt,name=info,proto3,oneof"`
}

type PastStream_Chunk struct {
	Chunk []byte `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"`
}

type PastStream_Checksum struct {
	Checksum []byte `protobuf:"bytes,3,opt,name=checksum,proto3,oneof"`
}

func (*PastStream_Info_) isPastStream_Data() {}

func (*PastStream_Chunk) isPastStream_Data() {}

func (*PastStream_Checksum) isPastStream_Data() {}

type CopyStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*CopyStream_Info_
	//	*CopyStream_Chunk
	//	*CopyStream_Checksum
	Data isCopyStream_Data `protobuf_oneof:"data"`
}

func (x *CopyStream) Reset() {
	*x = CopyStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cp_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyStream) ProtoMessage() {}

func (x *CopyStream) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cp_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyStream.ProtoReflect.Descriptor instead.
func (*CopyStream) Descriptor() ([]byte, []int) {
	return file_proto_cp_proto_rawDescGZIP(), []int{3}
}

func (m *CopyStream) GetData() isCopyStream_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *CopyStream) GetInfo() *CopyStream_Info {
	if x, ok := x.GetData().(*CopyStream_Info_); ok {
		return x.Info
	}
	return nil
}

func (x *CopyStream) GetChunk() []byte {
	if x, ok := x.GetData().(*CopyStream_Chunk); ok {
		return x.Chunk
	}
	return nil
}

func (x *CopyStream) GetChecksum() []byte {
	if x, ok := x.GetData().(*CopyStream_Checksum); ok {
		return x.Checksum
	}
	return nil
}

type isCopyStream_Data interface {
	isCopyStream_Data()
}

type CopyStream_Info_ struct {
	Info *CopyStream_Info `protobuf:"bytes,1,opt,name=info,proto3,oneof"`
}

type CopyStream_Chunk struct {
	Chunk []byte `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"`
}

type CopyStream_Checksum struct {
	Checksum []byte `protobuf:"bytes,3,opt,name=checksum,proto3,oneof"`
}

func (*CopyStream_Info_) isCopyStream_Data() {}

func (*CopyStream_Chunk) isCopyStream_Data() {}

func (*CopyStream_Checksum) isCopyStream_Data() {}

type PastStream_Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checksum   bool `protobuf:"varint,1,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Compressed bool `protobuf:"varint,2,opt,name=compressed,proto3" json:"compressed,omitempty"`
}

func (x *PastStream_Info) Reset() {
	*x = PastStream_Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cp_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PastStream_Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PastStream_Info) ProtoMessage() {}

func (x *PastStream_Info) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cp_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PastStream_Info.ProtoReflect.Descriptor instead.
func (*PastStream_Info) Descriptor() ([]byte, []int) {
	return file_proto_cp_proto_rawDescGZIP(), []int{2, 0}
}

func (x *PastStream_Info) GetChecksum() bool {
	if x != nil {
		return x.Checksum
	}
	return false
}

func (x *PastStream_Info) GetCompressed() bool {
	if x != nil {
		return x.Compressed
	}
	return false
}

type CopyStream_Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ttl        int64 `protobuf:"varint,1,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Compressed bool  `protobuf:"varint,2,opt,name=compressed,proto3" json:"compressed,omitempty"`
}

func (x *CopyStream_Info) Reset() {
	*x = CopyStream_Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cp_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyStream_Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyStream_Info) ProtoMessage() {}

func (x *CopyStream_Info) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cp_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyStream_Info.ProtoReflect.Descriptor instead.
func (*CopyStream_Info) Descriptor() ([]byte, []int) {
	return file_proto_cp_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CopyStream_Info) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *CopyStream_Info) GetCompressed() bool {
	if x != nil {
		return x.Compressed
	}
	return false
}

var File_proto_cp_proto protoreflect.FileDescriptor

var file_proto_cp_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb2, 0x01, 0x0a, 0x09, 0x43, 0x6c, 0x69, 0x70, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x25, 0x0a, 0x0b, 0x50, 0x61, 0x73,
	0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x22, 0xbc, 0x01, 0x0a, 0x0a, 0x50, 0x61, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x2c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a,
	0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x1c, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x73, 0x75, 0x6d, 0x1a, 0x42, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xb2, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x70, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x2c,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x05,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x12, 0x1c, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73,
	0x75, 0x6d, 0x1a, 0x38, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x06, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x32, 0xb4, 0x01, 0x0a, 0x0c, 0x57, 0x65, 0x62, 0x43, 0x6c, 0x69, 0x70,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x35, 0x0a, 0x04, 0x43, 0x6f, 0x70, 0x79, 0x12, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x28, 0x01, 0x12, 0x32, 0x0a, 0x05,
	0x50, 0x61, 0x73, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61,
	0x73, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x61, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x39, 0x0a, 0x05, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x24, 0x5a, 0x22, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x69, 0x67, 0x65, 0x72, 0x77,
	0x69, 0x6c, 0x6c, 0x39, 0x30, 0x2f, 0x77, 0x65, 0x62, 0x63, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_cp_proto_rawDescOnce sync.Once
	file_proto_cp_proto_rawDescData = file_proto_cp_proto_rawDesc
)

func file_proto_cp_proto_rawDescGZIP() []byte {
	file_proto_cp_proto_rawDescOnce.Do(func() {
		file_proto_cp_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_cp_proto_rawDescData)
	})
	return file_proto_cp_proto_rawDescData
}

var file_proto_cp_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_cp_proto_goTypes = []interface{}{
	(*Clipboard)(nil),       // 0: proto.Clipboard
	(*PasteOption)(nil),     // 1: proto.PasteOption
	(*PastStream)(nil),      // 2: proto.PastStream
	(*CopyStream)(nil),      // 3: proto.CopyStream
	(*PastStream_Info)(nil), // 4: proto.PastStream.Info
	(*CopyStream_Info)(nil), // 5: proto.CopyStream.Info
	(*emptypb.Empty)(nil),   // 6: google.protobuf.Empty
}
var file_proto_cp_proto_depIdxs = []int32{
	4, // 0: proto.PastStream.info:type_name -> proto.PastStream.Info
	5, // 1: proto.CopyStream.info:type_name -> proto.CopyStream.Info
	3, // 2: proto.WebClipboard.Copy:input_type -> proto.CopyStream
	1, // 3: proto.WebClipboard.Paste:input_type -> proto.PasteOption
	6, // 4: proto.WebClipboard.Clean:input_type -> google.protobuf.Empty
	6, // 5: proto.WebClipboard.Copy:output_type -> google.protobuf.Empty
	2, // 6: proto.WebClipboard.Paste:output_type -> proto.PastStream
	6, // 7: proto.WebClipboard.Clean:output_type -> google.protobuf.Empty
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_cp_proto_init() }
func file_proto_cp_proto_init() {
	if File_proto_cp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_cp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Clipboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PasteOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cp_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PastStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cp_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cp_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PastStream_Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cp_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyStream_Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_cp_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*PastStream_Info_)(nil),
		(*PastStream_Chunk)(nil),
		(*PastStream_Checksum)(nil),
	}
	file_proto_cp_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*CopyStream_Info_)(nil),
		(*CopyStream_Chunk)(nil),
		(*CopyStream_Checksum)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_cp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_cp_proto_goTypes,
		DependencyIndexes: file_proto_cp_proto_depIdxs,
		MessageInfos:      file_proto_cp_proto_msgTypes,
	}.Build()
	File_proto_cp_proto = out.File
	file_proto_cp_proto_rawDesc = nil
	file_proto_cp_proto_goTypes = nil
	file_proto_cp_proto_depIdxs = nil
}
